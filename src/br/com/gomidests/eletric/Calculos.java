/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.gomidests.eletric;

/**
 *
 * @author gomidests
 */
public class Calculos extends javax.swing.JFrame {

    /**
     * Creates new form Calculos
     */
    public Calculos() {
        initComponents();
        panResult.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        //paptues1.setVisible(false);
        //paptues2.setVisible(false);
        //paptues3.setVisible(false);
        //paptues4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jFrame1 = new javax.swing.JFrame();
        panResult = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comodos = new javax.swing.JLabel();
        powIlumApa = new javax.swing.JLabel();
        powIlumAti = new javax.swing.JLabel();
        ptug = new javax.swing.JLabel();
        powAparentePtug = new javax.swing.JLabel();
        ativaPtug = new javax.swing.JLabel();
        obs0 = new javax.swing.JLabel();
        obs = new javax.swing.JLabel();
        obs1 = new javax.swing.JLabel();
        obs2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        area = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        perimetro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cozinhas = new javax.swing.JButton();
        subsolos = new javax.swing.JButton();
        banheiros = new javax.swing.JButton();
        salas = new javax.swing.JButton();
        varandas = new javax.swing.JButton();
        copas = new javax.swing.JButton();
        areaDeServico = new javax.swing.JButton();
        garagens = new javax.swing.JButton();
        dormitorios = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dimensionameto Eletrico");
        setAlwaysOnTop(true);
        setFont(new java.awt.Font("Serif", 0, 10)); // NOI18N

        jLabel5.setText("Potencia de iluminação aparente ");

        jLabel6.setText("Potencia de iluminação ativa");

        jLabel8.setText("Quantidade de PTUG ");

        jLabel9.setText("Comodo");

        jLabel10.setText("Potencias aparente total PTUGs");

        jLabel11.setText("Potencias ativa total PTUGs");

        comodos.setText(" ");
        comodos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        powIlumApa.setText(" ");
        powIlumApa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        powIlumAti.setText(" ");
        powIlumAti.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        ptug.setText(" ");
        ptug.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        powAparentePtug.setText(" ");
        powAparentePtug.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        ativaPtug.setText(" ");
        ativaPtug.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        obs0.setText("Observaçoes ");

        obs.setText(" ");
        obs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        obs1.setText(" ");
        obs1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        obs2.setText("Observaçoes ");

        javax.swing.GroupLayout panResultLayout = new javax.swing.GroupLayout(panResult);
        panResult.setLayout(panResultLayout);
        panResultLayout.setHorizontalGroup(
            panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panResultLayout.createSequentialGroup()
                        .addComponent(obs0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(obs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panResultLayout.createSequentialGroup()
                        .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panResultLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ativaPtug, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panResultLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(powAparentePtug, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panResultLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ptug, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panResultLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(powIlumAti, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panResultLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(powIlumApa, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panResultLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(235, 235, 235)
                                .addComponent(comodos, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panResultLayout.createSequentialGroup()
                        .addComponent(obs2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(obs1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panResultLayout.setVerticalGroup(
            panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(powIlumApa))
                .addGap(18, 18, 18)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(powIlumAti))
                .addGap(18, 18, 18)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ptug))
                .addGap(18, 18, 18)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(powAparentePtug))
                .addGap(18, 18, 18)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ativaPtug))
                .addGap(59, 59, 59)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(obs, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(obs0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(obs1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(obs2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Digite a area que deseja calcular");

        area.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        area.setToolTipText("");
        area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaActionPerformed(evt);
            }
        });

        jLabel2.setText("Digite o perimetro que deseja calcular");

        perimetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perimetroActionPerformed(evt);
            }
        });

        jLabel3.setText("Qual o comodo deseja se dimencionar");

        jLabel4.setText("m²");

        jLabel7.setText("m");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(34, 34, 34)
                                .addComponent(perimetro))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(85, 85, 85)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(perimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        cozinhas.setBackground(new java.awt.Color(102, 102, 102));
        cozinhas.setText("Cozinhas");
        cozinhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cozinhasActionPerformed(evt);
            }
        });

        subsolos.setBackground(new java.awt.Color(102, 102, 102));
        subsolos.setText("Subsolos");
        subsolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subsolosActionPerformed(evt);
            }
        });

        banheiros.setBackground(new java.awt.Color(102, 102, 102));
        banheiros.setText("Banheiros");
        banheiros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banheirosActionPerformed(evt);
            }
        });

        salas.setBackground(new java.awt.Color(102, 102, 102));
        salas.setText("Salas");
        salas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salasActionPerformed(evt);
            }
        });

        varandas.setBackground(new java.awt.Color(102, 102, 102));
        varandas.setText("Varandas");
        varandas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varandasActionPerformed(evt);
            }
        });

        copas.setBackground(new java.awt.Color(102, 102, 102));
        copas.setText("Copas");
        copas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copasActionPerformed(evt);
            }
        });

        areaDeServico.setBackground(new java.awt.Color(102, 102, 102));
        areaDeServico.setText("Area de Serviço ");
        areaDeServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaDeServicoActionPerformed(evt);
            }
        });

        garagens.setBackground(new java.awt.Color(102, 102, 102));
        garagens.setText("Garagens");
        garagens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                garagensActionPerformed(evt);
            }
        });

        dormitorios.setBackground(new java.awt.Color(102, 102, 102));
        dormitorios.setText("Dormitórios");
        dormitorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dormitoriosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(areaDeServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(banheiros, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cozinhas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subsolos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(varandas, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dormitorios, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(garagens, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaDeServico)
                    .addComponent(banheiros)
                    .addComponent(garagens))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cozinhas)
                    .addComponent(dormitorios)
                    .addComponent(copas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salas)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(subsolos)
                        .addComponent(varandas)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_areaActionPerformed

    private void perimetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perimetroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perimetroActionPerformed

    private void garagensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_garagensActionPerformed
        // TODO add your handling code here:
        // Garagens no mínimo um ponto de tomada
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            powAparentePtug.setText("600 Va");
            ativaPtug.setText("480 W");
            ptug.setText("1");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs.setText("Pelo menos 1 PTUG para garagens");
        }
        
        comodos.setText("Garagens");
    }//GEN-LAST:event_garagensActionPerformed

    private void cozinhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cozinhasActionPerformed
        // Calculo de PTUG PTUE de Cozinhas, um ponto de tomada para cada 3.5 m ou fração de perimetro
        // TODO add your handling code here:
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int tug = 0,total = 0, cont = 0, tugs = 0,ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        tug = (int) ((per/3.5)+1);
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else if (tug <= 3){
            total = tug*600;
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            ptug.setText(Integer.toString(tug));
            obs1.setVisible(false);
            obs2.setVisible(false);
        } else{
            cont = tug-3;
            tugs = tug-cont;
            total = ((tugs*600)+(cont*100));
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            obs1.setVisible(true);
            obs1.setText(/*"<html> 600 Va para cada uma das 3 primeiras PTUGs e 100 Va para cada uma PTUG excedentes <html>"*/ "<html> 480 W para cada uma das 3 primeiras PTUGs e 80 W para cada uma PTUG excedentes <html>");
            obs2.setVisible(true);
            obs.setVisible(true);
            obs0.setVisible(true);
            obs2.setVisible(true);
            ptug.setText(Integer.toString(tug));
        }
        
        obs.setText("<html> Acima da bancada da pia devem ser previstas, no mínimo, duas tomadas de corrente, no mesmo ponto ou em pontos separados<html> ");
        comodos.setText("Cozinhas");
        ativa = (int) (total*0.8);
        ativaPtug.setText(Integer.toString(ativa) + " W");
        
    }//GEN-LAST:event_cozinhasActionPerformed

    private void dormitoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dormitoriosActionPerformed
        // TODO add your handling code here:
        // Calculo de PTUG PTUE de Dormitórios, um ponto de tomada para cada 5 m ou fração de perimetro 
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int tug = 0,total = 0, cont = 0, tugs = 0,ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        tug = (int) ((per/5)+1);
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            total = tug*100;
                        
            powAparentePtug.setText(Integer.toString(total) + " Va");
            obs0.setVisible(true);
            obs.setText("<html> 100 Va para cada PTUG <html>");
            obs.setVisible(true);
            obs0.setVisible(true);
            ptug.setText(Integer.toString(tug));
        }
        
        comodos.setText("Dormitórios");
        ativa = (int) (total*0.8);
        ativaPtug.setText(Integer.toString(ativa) + " W");
    }//GEN-LAST:event_dormitoriosActionPerformed

    private void copasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copasActionPerformed
        // TODO add your handling code here:
        //Calculo de PTUG PTUE de Copas, um ponto de tomada para cada 3.5 m ou fração de perimetro
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int tug = 0,total = 0, cont = 0, tugs = 0,ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        tug = (int) ((per/3.5)+1);
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else if (tug <= 3){
            total = tug*600;
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            ptug.setText(Integer.toString(tug));
            obs1.setVisible(false);
            obs2.setVisible(false);
        } else{
            cont = tug-3;
            tugs = tug-cont;
            total = ((tugs*600)+(cont*100));
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs1.setVisible(false);
            obs2.setVisible(false);
            obs.setText(/*"<html> 600 Va para cada uma das 3 primeiras PTUGs e 100 Va para cada uma PTUG excedentes <html>"*/ "<html> 480 W para cada uma das 3 primeiras PTUGs e 80 W para cada uma PTUG excedentes <html>");
            ptug.setText(Integer.toString(tug));
        }
        
        comodos.setText("Copas");
        ativa = (int) (total*0.8);
        ativaPtug.setText(Integer.toString(ativa) + " W");
    }//GEN-LAST:event_copasActionPerformed

    private void areaDeServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaDeServicoActionPerformed
        // TODO add your handling code here:
        // Calculo de PTUG PTUE de Area Servicos, um ponto de tomada para cada 3.5 m ou fração de perimetro
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int tug = 0,total = 0, cont = 0, tugs = 0,ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        tug = (int) ((per/3.5)+1);
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else if (tug <= 3){
            total = tug*600;
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            ptug.setText(Integer.toString(tug));
            obs1.setVisible(false);
            obs2.setVisible(false);
        } else{
            cont = tug-3;
            tugs = tug-cont;
            total = ((tugs*600)+(cont*100));
            
            powAparentePtug.setText(Integer.toString(total) + " Va");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs1.setVisible(false);
            obs2.setVisible(false);
            obs.setText(/*"<html> 600 Va para cada uma das 3 primeiras PTUGs e 100 Va para cada uma PTUG excedentes <html>"*/ "<html> 480 W para cada uma das 3 primeiras PTUGs e 80 W para cada uma PTUG excedentes <html>");
            ptug.setText(Integer.toString(tug));
        }
        
        comodos.setText("Area de Serviço ");
        ativa = (int) (total*0.8);
        ativaPtug.setText(Integer.toString(ativa) + " W");
    }//GEN-LAST:event_areaDeServicoActionPerformed

    private void subsolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subsolosActionPerformed
        // TODO add your handling code here:
        //Subsolos no mínimo um ponto de tomada
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        int ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            powAparentePtug.setText("600 Va");
            ativaPtug.setText("480 W");
            ptug.setText("1");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs.setText("Pelo menos 1 PTUG para subsolos");
        }
        
        comodos.setText("Subsolos");
    }//GEN-LAST:event_subsolosActionPerformed

    private void varandasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varandasActionPerformed
        // TODO add your handling code here:
        //Varandas no mínimo um ponto de tomada
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            powAparentePtug.setText("600 Va");
            ativaPtug.setText("480 W");
            ptug.setText("1");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs.setText("Pelo menos 1 PTUG para varandas");
        }
        
        comodos.setText("Varandas");
    }//GEN-LAST:event_varandasActionPerformed

    private void banheirosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banheirosActionPerformed
        // TODO add your handling code here:
        //
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            powAparentePtug.setText("600 Va");
            ativaPtug.setText("480 W");
            ptug.setText("1");
            obs.setVisible(true);
            obs0.setVisible(true);
            obs.setText("<html> No mínimo 1 ponto de tomada junto ao lavatório com uma distância mínima de 60 cm do limite do boxe <html>");
        }
        
        comodos.setText("Banheiros");
    }//GEN-LAST:event_banheirosActionPerformed

    private void salasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salasActionPerformed
        // TODO add your handling code here:
        // Calculo de PTUG PTUE de Salas, um ponto de tomada para cada 5 m ou fração de perimetro
        
        panResult.setVisible(true);
        obs.setVisible(false);
        obs0.setVisible(false);
        obs1.setVisible(false);
        obs2.setVisible(false);
        
        int tug = 0,total = 0, cont = 0, tugs = 0,ativa = 0,maior,i,con =0, va;
        float per = Float.parseFloat(perimetro.getText());
        float ar = Float.parseFloat(area.getText());
        
            // Potencia de iluminação
        if (ar<= 0){
            powIlumApa.setText("0 Va");
            powIlumAti.setText("0 W");
        }
            else if (ar <= 6){
            powIlumApa.setText("100 Va");
            powIlumAti.setText("100 W");
        } else {
            i = (int) (ar - 6);
            for (maior=0; maior<=i; i-=4){
                con++;
            }
            va = ((con*60)+100-60);
            ativa = va*1;
            
            powIlumApa.setText(va + " Va");
            powIlumAti.setText(ativa + " W");
        }
        
        // Pontos de tomadas de Uso geral
        tug = (int) ((per/5)+1);
        if (per <= 0){
            ptug.setText("0");
            powAparentePtug.setText("0 Va");
            ativaPtug.setText("0 W");
        } else {
            total = tug*100;
                        
            powAparentePtug.setText(Integer.toString(total) + " Va");
            obs0.setVisible(true);
            obs.setText("<html> 100 Va para cada PTUG <html>");
            obs.setVisible(true);
            obs0.setVisible(true);
            ptug.setText(Integer.toString(tug));
        }
        
        comodos.setText("Salas");
        ativa = (int) (total*0.8);
        ativaPtug.setText(Integer.toString(ativa) + " W");
    }//GEN-LAST:event_salasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Calculos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField area;
    private javax.swing.JButton areaDeServico;
    private javax.swing.JLabel ativaPtug;
    private javax.swing.JButton banheiros;
    private javax.swing.JLabel comodos;
    private javax.swing.JButton copas;
    private javax.swing.JButton cozinhas;
    private javax.swing.JButton dormitorios;
    private javax.swing.JButton garagens;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel obs;
    private javax.swing.JLabel obs0;
    private javax.swing.JLabel obs1;
    private javax.swing.JLabel obs2;
    private javax.swing.JPanel panResult;
    private javax.swing.JTextField perimetro;
    private javax.swing.JLabel powAparentePtug;
    private javax.swing.JLabel powIlumApa;
    private javax.swing.JLabel powIlumAti;
    private javax.swing.JLabel ptug;
    private javax.swing.JButton salas;
    private javax.swing.JButton subsolos;
    private javax.swing.JButton varandas;
    // End of variables declaration//GEN-END:variables
}